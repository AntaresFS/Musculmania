# .devcontainer/docker-compose.yml
version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: mydb
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: flask-api
    restart: unless-stopped
    depends_on:
      - db
    environment:
      FLASK_ENV: development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
      POSTGRES_DB: mydb
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
    ports:
      - "5000:5000"
    volumes:
      - ../backend:/app     # Para que los cambios locales se reflejen de inmediato
    command: python app.py

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: react-frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "3000:80"   # El contenedor nginx en producción escucha 80; lo mapeamos a 3000
    volumes:
      - ../frontend:/usr/src/app   # Para modo desarrollo, opcional. Si quieres hacer hot‐reload con Docker + Nginx puedes reconfigurar.
    environment:
      - NODE_ENV=development
    command: sh -c "npm install && npm run start"

volumes:
  db_data:
